#!/usr/bin/env python
import uproot
import glob
from uproot.interp.auto import interpret

def main(input_files):
    example_file = input_files[0]
    f = uproot.open(example_file)
    content = f.allkeys()
    content = [c for c in content if '/' in c]

    for c in content:
        data = f[c]
        print_structure(data)


def print_structure(events, offset=2):
    spacing = '-' * offset
    for k in sorted(events.keys()):
        name = k.decode('utf-8')
        className = events[k].fClassName
        readAs = interpret(events[k])
        msg = '|{0} {1} ({2})'
        if readAs is None:
            print(msg.format(spacing, name, className))
        else:
            print(msg.format(spacing, name, readAs))
        if hasattr(events[k], 'keys'):
            print_structure(events[k], offset=offset + 2)

if __name__ == '__main__':
    input_files = glob.glob('data/L1Ntuple_*.root')
    branches = [
        'L1CaloCluster.et',
        'L1CaloCluster.eta',
    ]
    main(input_files)
